{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  player: {\n    id: '1',\n    name: 'Player',\n    coins: 1000,\n    diamonds: 100,\n    rank: 'Bronze',\n    experience: 0,\n    level: 1,\n    characters: [],\n    selectedCharacters: []\n  },\n  characters: [{\n    id: 'iron-man',\n    name: 'Iron Man',\n    health: 1000,\n    maxHealth: 1000,\n    level: 1,\n    experience: 0,\n    isPaid: false,\n    isUnlocked: true,\n    abilities: [{\n      id: 'repulsor-blast',\n      name: 'Repulsor Blast',\n      damage: 100,\n      cooldown: 3,\n      currentCooldown: 0,\n      isUltimate: false,\n      description: 'Fire a powerful energy blast'\n    }, {\n      id: 'unibeam',\n      name: 'Unibeam',\n      damage: 250,\n      cooldown: 6,\n      currentCooldown: 0,\n      isUltimate: true,\n      description: 'Channel a powerful beam from arc reactor'\n    }],\n    skins: [],\n    currentSkin: 'default'\n  }, {\n    id: 'supreme-strange',\n    name: 'Supreme Strange',\n    health: 800,\n    maxHealth: 800,\n    level: 1,\n    experience: 0,\n    isPaid: true,\n    isUnlocked: false,\n    abilities: [{\n      id: 'mystic-arts',\n      name: 'Mystic Arts',\n      damage: 120,\n      cooldown: 4,\n      currentCooldown: 0,\n      isUltimate: false,\n      description: 'Cast a powerful spell'\n    }],\n    skins: [],\n    currentSkin: 'default'\n  }],\n  battleState: null\n};\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    updatePlayer: (state, action) => {\n      state.player = {\n        ...state.player,\n        ...action.payload\n      };\n    },\n    updateBattleState: (state, action) => {\n      state.battleState = action.payload;\n    },\n    updateCharacter: (state, action) => {\n      const index = state.characters.findIndex(c => c.id === action.payload.id);\n      if (index !== -1) {\n        state.characters[index] = action.payload;\n      }\n    },\n    selectCharacter: (state, action) => {\n      if (state.player.selectedCharacters.length < 3) {\n        state.player.selectedCharacters.push(action.payload);\n      }\n    },\n    unselectCharacter: (state, action) => {\n      state.player.selectedCharacters = state.player.selectedCharacters.filter(id => id !== action.payload);\n    }\n  }\n});\nexport const {\n  updatePlayer,\n  updateBattleState,\n  updateCharacter,\n  selectCharacter,\n  unselectCharacter\n} = gameSlice.actions;\nexport const store = configureStore({\n  reducer: {\n    game: gameSlice.reducer\n  }\n});","map":{"version":3,"names":["configureStore","createSlice","initialState","player","id","name","coins","diamonds","rank","experience","level","characters","selectedCharacters","health","maxHealth","isPaid","isUnlocked","abilities","damage","cooldown","currentCooldown","isUltimate","description","skins","currentSkin","battleState","gameSlice","reducers","updatePlayer","state","action","payload","updateBattleState","updateCharacter","index","findIndex","c","selectCharacter","length","push","unselectCharacter","filter","actions","store","reducer","game"],"sources":["/home/schoolpjs3/theendwarmarvel/src/store/index.ts"],"sourcesContent":["import { configureStore, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { GameState, Character, Player, BattleState } from '../types';\n\nconst initialState: GameState = {\n  player: {\n    id: '1',\n    name: 'Player',\n    coins: 1000,\n    diamonds: 100,\n    rank: 'Bronze',\n    experience: 0,\n    level: 1,\n    characters: [],\n    selectedCharacters: [],\n  },\n  characters: [\n    {\n      id: 'iron-man',\n      name: 'Iron Man',\n      health: 1000,\n      maxHealth: 1000,\n      level: 1,\n      experience: 0,\n      isPaid: false,\n      isUnlocked: true,\n      abilities: [\n        {\n          id: 'repulsor-blast',\n          name: 'Repulsor Blast',\n          damage: 100,\n          cooldown: 3,\n          currentCooldown: 0,\n          isUltimate: false,\n          description: 'Fire a powerful energy blast',\n        },\n        {\n          id: 'unibeam',\n          name: 'Unibeam',\n          damage: 250,\n          cooldown: 6,\n          currentCooldown: 0,\n          isUltimate: true,\n          description: 'Channel a powerful beam from arc reactor',\n        },\n      ],\n      skins: [],\n      currentSkin: 'default',\n    },\n    {\n      id: 'supreme-strange',\n      name: 'Supreme Strange',\n      health: 800,\n      maxHealth: 800,\n      level: 1,\n      experience: 0,\n      isPaid: true,\n      isUnlocked: false,\n      abilities: [\n        {\n          id: 'mystic-arts',\n          name: 'Mystic Arts',\n          damage: 120,\n          cooldown: 4,\n          currentCooldown: 0,\n          isUltimate: false,\n          description: 'Cast a powerful spell',\n        },\n      ],\n      skins: [],\n      currentSkin: 'default',\n    },\n  ],\n  battleState: null,\n};\n\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    updatePlayer: (state, action: PayloadAction<Partial<Player>>) => {\n      state.player = { ...state.player, ...action.payload };\n    },\n    updateBattleState: (state, action: PayloadAction<BattleState>) => {\n      state.battleState = action.payload;\n    },\n    updateCharacter: (state, action: PayloadAction<Character>) => {\n      const index = state.characters.findIndex(c => c.id === action.payload.id);\n      if (index !== -1) {\n        state.characters[index] = action.payload;\n      }\n    },\n    selectCharacter: (state, action: PayloadAction<string>) => {\n      if (state.player.selectedCharacters.length < 3) {\n        state.player.selectedCharacters.push(action.payload);\n      }\n    },\n    unselectCharacter: (state, action: PayloadAction<string>) => {\n      state.player.selectedCharacters = state.player.selectedCharacters.filter(\n        id => id !== action.payload\n      );\n    },\n  },\n});\n\nexport const {\n  updatePlayer,\n  updateBattleState,\n  updateCharacter,\n  selectCharacter,\n  unselectCharacter,\n} = gameSlice.actions;\n\nexport const store = configureStore({\n  reducer: {\n    game: gameSlice.reducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}