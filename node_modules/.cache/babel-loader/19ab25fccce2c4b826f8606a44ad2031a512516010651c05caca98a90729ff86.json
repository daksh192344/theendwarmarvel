{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useSelector,useDispatch}from'react-redux';import{gainExperience}from'../store';import styles from'./Battle.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Battle=()=>{const navigate=useNavigate();const dispatch=useDispatch();const{player,characters}=useSelector(state=>state.game);// Get the first selected character or default to Thor\nconst playerCharacter=characters.find(c=>c.id===player.selectedCharacters[0])||characters.find(c=>c.id==='thor');// Random AI opponent\nconst availableOpponents=characters.filter(c=>c.isUnlocked);const randomOpponent=availableOpponents[Math.floor(Math.random()*availableOpponents.length)];const[playerFighter,setPlayerFighter]=useState({id:(playerCharacter===null||playerCharacter===void 0?void 0:playerCharacter.id)||'thor',name:(playerCharacter===null||playerCharacter===void 0?void 0:playerCharacter.name)||'Thor',health:(playerCharacter===null||playerCharacter===void 0?void 0:playerCharacter.health)||1000,maxHealth:(playerCharacter===null||playerCharacter===void 0?void 0:playerCharacter.maxHealth)||1000,isBlocking:false,isStunned:false});const[opponentFighter,setOpponentFighter]=useState({id:(randomOpponent===null||randomOpponent===void 0?void 0:randomOpponent.id)||'iron-man',name:(randomOpponent===null||randomOpponent===void 0?void 0:randomOpponent.name)||'Iron Man',health:(randomOpponent===null||randomOpponent===void 0?void 0:randomOpponent.health)||1000,maxHealth:(randomOpponent===null||randomOpponent===void 0?void 0:randomOpponent.maxHealth)||1000,isBlocking:false,isStunned:false});const[gameOver,setGameOver]=useState(false);const[winner,setWinner]=useState(null);const[battleLog,setBattleLog]=useState([]);const addToBattleLog=message=>{setBattleLog(prev=>[...prev,message].slice(-5));// Keep last 5 messages\n};const performAttack=(damage,isPlayer)=>{if(isPlayer){if(!opponentFighter.isBlocking){const newHealth=Math.max(0,opponentFighter.health-damage);setOpponentFighter(prev=>({...prev,health:newHealth}));addToBattleLog(`${playerFighter.name} deals ${damage} damage!`);if(newHealth===0){setGameOver(true);setWinner('player');dispatch(gainExperience(10));// Award XP for winning\n}}else{addToBattleLog(`${opponentFighter.name} blocked the attack!`);}}else{if(!playerFighter.isBlocking){const newHealth=Math.max(0,playerFighter.health-damage);setPlayerFighter(prev=>({...prev,health:newHealth}));addToBattleLog(`${opponentFighter.name} deals ${damage} damage!`);if(newHealth===0){setGameOver(true);setWinner('opponent');}}else{addToBattleLog(`${playerFighter.name} blocked the attack!`);}}};// AI opponent logic\nuseEffect(()=>{if(!gameOver&&!opponentFighter.isStunned){const aiInterval=setInterval(()=>{const actions=['attack','block','special'];const randomAction=actions[Math.floor(Math.random()*actions.length)];switch(randomAction){case'attack':performAttack(50,false);break;case'block':setOpponentFighter(prev=>({...prev,isBlocking:true}));setTimeout(()=>{setOpponentFighter(prev=>({...prev,isBlocking:false}));},2000);break;case'special':performAttack(100,false);break;}},3000);return()=>clearInterval(aiInterval);}},[gameOver,opponentFighter.isStunned]);return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-white relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-0 left-0 right-0 p-4 z-10\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-2/5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:playerFighter.name}),/*#__PURE__*/_jsxs(\"span\",{children:[playerFighter.health,\"/\",playerFighter.maxHealth]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"h-4 bg-gray-700 rounded-full overflow-hidden\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-full bg-green-600 transition-all duration-300\",style:{width:`${playerFighter.health/playerFighter.maxHealth*100}%`}})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-yellow-500\",children:\"VS\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-2/5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:opponentFighter.name}),/*#__PURE__*/_jsxs(\"span\",{children:[opponentFighter.health,\"/\",opponentFighter.maxHealth]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"h-4 bg-gray-700 rounded-full overflow-hidden\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-full bg-red-600 transition-all duration-300\",style:{width:`${opponentFighter.health/opponentFighter.maxHealth*100}%`}})})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.arena,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.arenaFloor}),/*#__PURE__*/_jsx(\"div\",{className:`${styles.character} ${styles.characterLeft} \n          ${playerFighter.isBlocking?styles.blocking:''}\n          ${playerFighter.isStunned?styles.stunned:''}`,children:/*#__PURE__*/_jsx(\"div\",{className:`${styles.characterModel} ${styles.playerModel}`,children:/*#__PURE__*/_jsx(\"span\",{className:\"material-icons text-8xl\",children:\"person\"})})}),/*#__PURE__*/_jsx(\"div\",{className:`${styles.character} ${styles.characterRight}\n          ${opponentFighter.isBlocking?styles.blocking:''}\n          ${opponentFighter.isStunned?styles.stunned:''}`,children:/*#__PURE__*/_jsx(\"div\",{className:`${styles.characterModel} ${styles.opponentModel}`,children:/*#__PURE__*/_jsx(\"span\",{className:\"material-icons text-8xl\",children:\"person\"})})}),/*#__PURE__*/_jsx(\"div\",{className:styles.arenaLighting})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute left-4 top-20 w-64 bg-gray-800 bg-opacity-90 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-bold mb-2\",children:\"Battle Log\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:battleLog.map((log,index)=>/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-300\",children:log},index))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-0 left-0 right-0 p-6 bg-gray-800 bg-opacity-90\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-4xl mx-auto\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-3 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>performAttack(50,true),disabled:gameOver||playerFighter.isStunned,className:\"w-full bg-blue-600 px-6 py-3 rounded-lg hover:bg-blue-700 disabled:opacity-50\",children:\"Basic Attack\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setPlayerFighter(prev=>({...prev,isBlocking:true}));setTimeout(()=>{setPlayerFighter(prev=>({...prev,isBlocking:false}));},2000);},disabled:gameOver||playerFighter.isStunned,className:\"w-full bg-green-600 px-6 py-3 rounded-lg hover:bg-green-700 disabled:opacity-50\",children:\"Block\"})]}),/*#__PURE__*/_jsx(\"div\",{children:playerCharacter===null||playerCharacter===void 0?void 0:playerCharacter.abilities.map(ability=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>performAttack(ability.damage,true),disabled:gameOver||playerFighter.isStunned,className:\"w-full bg-purple-600 px-6 py-3 rounded-lg hover:bg-purple-700 disabled:opacity-50 mb-4\",children:ability.name},ability.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"bg-red-600 px-6 py-3 rounded-lg hover:bg-red-700\",children:\"Surrender\"})})]})})}),gameOver&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-black bg-opacity-75 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-xl p-8 text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold mb-4\",children:winner==='player'?'Victory!':'Defeat!'}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-6\",children:winner==='player'?'Congratulations! You won the battle!':'Better luck next time!'}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),className:\"bg-blue-600 px-6 py-2 rounded-lg hover:bg-blue-700\",children:\"Fight Again\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"bg-gray-600 px-6 py-2 rounded-lg hover:bg-gray-700\",children:\"Return to Lobby\"})]})]})})]});};export default Battle;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSelector","useDispatch","gainExperience","styles","jsx","_jsx","jsxs","_jsxs","Battle","navigate","dispatch","player","characters","state","game","playerCharacter","find","c","id","selectedCharacters","availableOpponents","filter","isUnlocked","randomOpponent","Math","floor","random","length","playerFighter","setPlayerFighter","name","health","maxHealth","isBlocking","isStunned","opponentFighter","setOpponentFighter","gameOver","setGameOver","winner","setWinner","battleLog","setBattleLog","addToBattleLog","message","prev","slice","performAttack","damage","isPlayer","newHealth","max","aiInterval","setInterval","actions","randomAction","setTimeout","clearInterval","className","children","style","width","arena","arenaFloor","character","characterLeft","blocking","stunned","characterModel","playerModel","characterRight","opponentModel","arenaLighting","map","log","index","onClick","disabled","abilities","ability","window","location","reload"],"sources":["/home/schoolpjs3/theendwarmarvel/src/components/Battle.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../store';\nimport { updatePlayer, gainExperience } from '../store';\nimport styles from './Battle.module.css';\n\ntype Fighter = {\n  id: string;\n  name: string;\n  health: number;\n  maxHealth: number;\n  isBlocking: boolean;\n  isStunned: boolean;\n};\n\nconst Battle: React.FC = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { player, characters } = useSelector((state: RootState) => state.game);\n  \n  // Get the first selected character or default to Thor\n  const playerCharacter = characters.find(c => c.id === player.selectedCharacters[0]) || \n                         characters.find(c => c.id === 'thor');\n  \n  // Random AI opponent\n  const availableOpponents = characters.filter(c => c.isUnlocked);\n  const randomOpponent = availableOpponents[Math.floor(Math.random() * availableOpponents.length)];\n\n  const [playerFighter, setPlayerFighter] = useState<Fighter>({\n    id: playerCharacter?.id || 'thor',\n    name: playerCharacter?.name || 'Thor',\n    health: playerCharacter?.health || 1000,\n    maxHealth: playerCharacter?.maxHealth || 1000,\n    isBlocking: false,\n    isStunned: false\n  });\n\n  const [opponentFighter, setOpponentFighter] = useState<Fighter>({\n    id: randomOpponent?.id || 'iron-man',\n    name: randomOpponent?.name || 'Iron Man',\n    health: randomOpponent?.health || 1000,\n    maxHealth: randomOpponent?.maxHealth || 1000,\n    isBlocking: false,\n    isStunned: false\n  });\n\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState<string | null>(null);\n  const [battleLog, setBattleLog] = useState<string[]>([]);\n\n  const addToBattleLog = (message: string) => {\n    setBattleLog(prev => [...prev, message].slice(-5)); // Keep last 5 messages\n  };\n\n  const performAttack = (damage: number, isPlayer: boolean) => {\n    if (isPlayer) {\n      if (!opponentFighter.isBlocking) {\n        const newHealth = Math.max(0, opponentFighter.health - damage);\n        setOpponentFighter(prev => ({ ...prev, health: newHealth }));\n        addToBattleLog(`${playerFighter.name} deals ${damage} damage!`);\n        if (newHealth === 0) {\n          setGameOver(true);\n          setWinner('player');\n          dispatch(gainExperience(10)); // Award XP for winning\n        }\n      } else {\n        addToBattleLog(`${opponentFighter.name} blocked the attack!`);\n      }\n    } else {\n      if (!playerFighter.isBlocking) {\n        const newHealth = Math.max(0, playerFighter.health - damage);\n        setPlayerFighter(prev => ({ ...prev, health: newHealth }));\n        addToBattleLog(`${opponentFighter.name} deals ${damage} damage!`);\n        if (newHealth === 0) {\n          setGameOver(true);\n          setWinner('opponent');\n        }\n      } else {\n        addToBattleLog(`${playerFighter.name} blocked the attack!`);\n      }\n    }\n  };\n\n  // AI opponent logic\n  useEffect(() => {\n    if (!gameOver && !opponentFighter.isStunned) {\n      const aiInterval = setInterval(() => {\n        const actions = ['attack', 'block', 'special'];\n        const randomAction = actions[Math.floor(Math.random() * actions.length)];\n        \n        switch (randomAction) {\n          case 'attack':\n            performAttack(50, false);\n            break;\n          case 'block':\n            setOpponentFighter(prev => ({ ...prev, isBlocking: true }));\n            setTimeout(() => {\n              setOpponentFighter(prev => ({ ...prev, isBlocking: false }));\n            }, 2000);\n            break;\n          case 'special':\n            performAttack(100, false);\n            break;\n        }\n      }, 3000);\n\n      return () => clearInterval(aiInterval);\n    }\n  }, [gameOver, opponentFighter.isStunned]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white relative\">\n      {/* Health Bars */}\n      <div className=\"absolute top-0 left-0 right-0 p-4 z-10\">\n        <div className=\"flex justify-between items-center mb-4\">\n          {/* Player Health */}\n          <div className=\"w-2/5\">\n            <div className=\"flex justify-between mb-1\">\n              <span className=\"font-bold\">{playerFighter.name}</span>\n              <span>{playerFighter.health}/{playerFighter.maxHealth}</span>\n            </div>\n            <div className=\"h-4 bg-gray-700 rounded-full overflow-hidden\">\n              <div \n                className=\"h-full bg-green-600 transition-all duration-300\"\n                style={{ width: `${(playerFighter.health / playerFighter.maxHealth) * 100}%` }}\n              />\n            </div>\n          </div>\n          \n          {/* VS */}\n          <div className=\"text-2xl font-bold text-yellow-500\">VS</div>\n          \n          {/* Opponent Health */}\n          <div className=\"w-2/5\">\n            <div className=\"flex justify-between mb-1\">\n              <span className=\"font-bold\">{opponentFighter.name}</span>\n              <span>{opponentFighter.health}/{opponentFighter.maxHealth}</span>\n            </div>\n            <div className=\"h-4 bg-gray-700 rounded-full overflow-hidden\">\n              <div \n                className=\"h-full bg-red-600 transition-all duration-300\"\n                style={{ width: `${(opponentFighter.health / opponentFighter.maxHealth) * 100}%` }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Battle Arena */}\n      <div className={styles.arena}>\n        <div className={styles.arenaFloor} />\n\n        {/* Player Character */}\n        <div className={`${styles.character} ${styles.characterLeft} \n          ${playerFighter.isBlocking ? styles.blocking : ''}\n          ${playerFighter.isStunned ? styles.stunned : ''}`}\n        >\n          <div className={`${styles.characterModel} ${styles.playerModel}`}>\n            <span className=\"material-icons text-8xl\">person</span>\n          </div>\n        </div>\n\n        {/* Opponent Character */}\n        <div className={`${styles.character} ${styles.characterRight}\n          ${opponentFighter.isBlocking ? styles.blocking : ''}\n          ${opponentFighter.isStunned ? styles.stunned : ''}`}\n        >\n          <div className={`${styles.characterModel} ${styles.opponentModel}`}>\n            <span className=\"material-icons text-8xl\">person</span>\n          </div>\n        </div>\n\n        {/* Arena Lighting */}\n        <div className={styles.arenaLighting} />\n      </div>\n\n      {/* Battle Log */}\n      <div className=\"absolute left-4 top-20 w-64 bg-gray-800 bg-opacity-90 rounded-lg p-4\">\n        <h3 className=\"font-bold mb-2\">Battle Log</h3>\n        <div className=\"space-y-1\">\n          {battleLog.map((log, index) => (\n            <p key={index} className=\"text-sm text-gray-300\">{log}</p>\n          ))}\n        </div>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"absolute bottom-0 left-0 right-0 p-6 bg-gray-800 bg-opacity-90\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"grid grid-cols-3 gap-4\">\n            <div className=\"space-y-4\">\n              <button\n                onClick={() => performAttack(50, true)}\n                disabled={gameOver || playerFighter.isStunned}\n                className=\"w-full bg-blue-600 px-6 py-3 rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n              >\n                Basic Attack\n              </button>\n              <button\n                onClick={() => {\n                  setPlayerFighter(prev => ({ ...prev, isBlocking: true }));\n                  setTimeout(() => {\n                    setPlayerFighter(prev => ({ ...prev, isBlocking: false }));\n                  }, 2000);\n                }}\n                disabled={gameOver || playerFighter.isStunned}\n                className=\"w-full bg-green-600 px-6 py-3 rounded-lg hover:bg-green-700 disabled:opacity-50\"\n              >\n                Block\n              </button>\n            </div>\n\n            <div>\n              {playerCharacter?.abilities.map((ability) => (\n                <button\n                  key={ability.id}\n                  onClick={() => performAttack(ability.damage, true)}\n                  disabled={gameOver || playerFighter.isStunned}\n                  className=\"w-full bg-purple-600 px-6 py-3 rounded-lg hover:bg-purple-700 disabled:opacity-50 mb-4\"\n                >\n                  {ability.name}\n                </button>\n              ))}\n            </div>\n\n            <div className=\"text-right\">\n              <button\n                onClick={() => navigate('/')}\n                className=\"bg-red-600 px-6 py-3 rounded-lg hover:bg-red-700\"\n              >\n                Surrender\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Game Over Overlay */}\n      {gameOver && (\n        <div className=\"absolute inset-0 bg-black bg-opacity-75 flex items-center justify-center\">\n          <div className=\"bg-gray-800 rounded-xl p-8 text-center\">\n            <h2 className=\"text-3xl font-bold mb-4\">\n              {winner === 'player' ? 'Victory!' : 'Defeat!'}\n            </h2>\n            <p className=\"mb-6\">\n              {winner === 'player' \n                ? 'Congratulations! You won the battle!' \n                : 'Better luck next time!'}\n            </p>\n            <div className=\"space-x-4\">\n              <button\n                onClick={() => window.location.reload()}\n                className=\"bg-blue-600 px-6 py-2 rounded-lg hover:bg-blue-700\"\n              >\n                Fight Again\n              </button>\n              <button\n                onClick={() => navigate('/')}\n                className=\"bg-gray-600 px-6 py-2 rounded-lg hover:bg-gray-700\"\n              >\n                Return to Lobby\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Battle; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}