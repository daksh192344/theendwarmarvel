{"ast":null,"code":"import{configureStore,createSlice}from'@reduxjs/toolkit';import{characters}from'../data/characters';const initialState={player:{id:'1',name:'Player',coins:1000,diamonds:100,rank:'Bronze',experience:0,level:1,characters:['thor','captain-america','iron-man'],selectedCharacters:[]},characters:characters,battleState:null};const gameSlice=createSlice({name:'game',initialState,reducers:{updatePlayer:(state,action)=>{state.player={...state.player,...action.payload};},updateBattleState:(state,action)=>{state.battleState=action.payload;},updateCharacter:(state,action)=>{const index=state.characters.findIndex(c=>c.id===action.payload.id);if(index!==-1){state.characters[index]=action.payload;}},selectCharacter:(state,action)=>{if(state.player.selectedCharacters.length<3){state.player.selectedCharacters.push(action.payload);}},unselectCharacter:(state,action)=>{state.player.selectedCharacters=state.player.selectedCharacters.filter(id=>id!==action.payload);},gainExperience:(state,action)=>{state.player.experience+=action.payload;// Level up if enough experience\nconst nextLevelExp=state.player.level*100;if(state.player.experience>=nextLevelExp){state.player.level+=1;state.player.experience-=nextLevelExp;// Unlock characters based on new level\nstate.characters=state.characters.map(char=>{if(char.requiredLevel&&char.requiredLevel<=state.player.level){return{...char,isUnlocked:true};}return char;});}}}});export const{updatePlayer,updateBattleState,updateCharacter,selectCharacter,unselectCharacter,gainExperience}=gameSlice.actions;export const store=configureStore({reducer:{game:gameSlice.reducer}});","map":{"version":3,"names":["configureStore","createSlice","characters","initialState","player","id","name","coins","diamonds","rank","experience","level","selectedCharacters","battleState","gameSlice","reducers","updatePlayer","state","action","payload","updateBattleState","updateCharacter","index","findIndex","c","selectCharacter","length","push","unselectCharacter","filter","gainExperience","nextLevelExp","map","char","requiredLevel","isUnlocked","actions","store","reducer","game"],"sources":["/home/schoolpjs3/theendwarmarvel/src/store/index.ts"],"sourcesContent":["import { configureStore, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { GameState, Character, Player, BattleState } from '../types';\nimport { characters } from '../data/characters';\n\nconst initialState: GameState = {\n  player: {\n    id: '1',\n    name: 'Player',\n    coins: 1000,\n    diamonds: 100,\n    rank: 'Bronze',\n    experience: 0,\n    level: 1,\n    characters: ['thor', 'captain-america', 'iron-man'],\n    selectedCharacters: [],\n  },\n  characters: characters,\n  battleState: null,\n};\n\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    updatePlayer: (state, action: PayloadAction<Partial<Player>>) => {\n      state.player = { ...state.player, ...action.payload };\n    },\n    updateBattleState: (state, action: PayloadAction<BattleState>) => {\n      state.battleState = action.payload;\n    },\n    updateCharacter: (state, action: PayloadAction<Character>) => {\n      const index = state.characters.findIndex(c => c.id === action.payload.id);\n      if (index !== -1) {\n        state.characters[index] = action.payload;\n      }\n    },\n    selectCharacter: (state, action: PayloadAction<string>) => {\n      if (state.player.selectedCharacters.length < 3) {\n        state.player.selectedCharacters.push(action.payload);\n      }\n    },\n    unselectCharacter: (state, action: PayloadAction<string>) => {\n      state.player.selectedCharacters = state.player.selectedCharacters.filter(\n        id => id !== action.payload\n      );\n    },\n    gainExperience: (state, action: PayloadAction<number>) => {\n      state.player.experience += action.payload;\n      // Level up if enough experience\n      const nextLevelExp = state.player.level * 100;\n      if (state.player.experience >= nextLevelExp) {\n        state.player.level += 1;\n        state.player.experience -= nextLevelExp;\n        // Unlock characters based on new level\n        state.characters = state.characters.map(char => {\n          if (char.requiredLevel && char.requiredLevel <= state.player.level) {\n            return { ...char, isUnlocked: true };\n          }\n          return char;\n        });\n      }\n    },\n  },\n});\n\nexport const {\n  updatePlayer,\n  updateBattleState,\n  updateCharacter,\n  selectCharacter,\n  unselectCharacter,\n  gainExperience,\n} = gameSlice.actions;\n\nexport const store = configureStore({\n  reducer: {\n    game: gameSlice.reducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}